.TH "/Users/benkirk/codes/peak_memusage/log_memusage.h" 3 "Sun Jan 29 2023" "Log Memusage" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/Users/benkirk/codes/peak_memusage/log_memusage.h
.SH SYNOPSIS
.br
.PP
.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBlog_memusage_gpu_memory\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBLOG_MEMUSAGE_MAX_GPU_DEVICES\fP   8"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fBlog_memusage_gpu_memory\fP \fBlog_memusage_gpu_memory_t\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBlog_memusage_annotate\fP (const char *annotation)"
.br
.ti -1c
.RI "int \fBlog_memusage_get\fP ()"
.br
.ti -1c
.RI "int \fBlog_memusage_report\fP (const char *prefix)"
.br
.ti -1c
.RI "int \fBlog_memusage_pause\fP ()"
.br
.ti -1c
.RI "int \fBlog_memusage_resume\fP ()"
.br
.ti -1c
.RI "void \fBlog_memusage_initialize\fP ()"
.br
.ti -1c
.RI "void \fBlog_memusage_finalize\fP ()"
.br
.ti -1c
.RI "int \fBlog_memusage_ngpus\fP ()"
.br
.ti -1c
.RI "\fBlog_memusage_gpu_memory_t\fP \fBlog_memusage_get_each_gpu\fP ()"
.br
.ti -1c
.RI "int \fBlog_memusage_get_all_gpus\fP ()"
.br
.ti -1c
.RI "int \fBlog_memusage_get_max_gpu\fP ()"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define LOG_MEMUSAGE_MAX_GPU_DEVICES   8"

.PP
Definition at line \fB189\fP of file \fBlog_memusage\&.h\fP\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fBlog_memusage_gpu_memory\fP \fBlog_memusage_gpu_memory_t\fP"

.PP
Definition at line \fB223\fP of file \fBlog_memusage\&.h\fP\&.
.SH "Function Documentation"
.PP 
.SS "int log_memusage_annotate (const char * annotation)"
Insert the specified \fCannotation\fP into the memory log file\&. This is useful for example to annotate what phase of the main program is executing at a given time\&. 
.PP
Definition at line \fB178\fP of file \fBlog_memusage\&.c\fP\&.
.SS "void log_memusage_finalize ()"
Terminates the memory logging execution thread\&. 
.SS "int log_memusage_get ()"
Gets the amount of CPU memory used\&. 
.PP
\fBReturns\fP
.RS 4
The amount of CPU memory currently in use (MB)\&. 
.RE
.PP

.PP
Definition at line \fB214\fP of file \fBlog_memusage\&.c\fP\&.
.SS "int log_memusage_get_all_gpus ()"

.PP
\fBReturns\fP
.RS 4
the total memory used on all of the \fCdevice_count\fP GPUs (MB)\&. 
.RE
.PP

.PP
Definition at line \fB27\fP of file \fBlog_memusage_nvml\&.c\fP\&.
.SS "\fBlog_memusage_gpu_memory_t\fP log_memusage_get_each_gpu ()"

.PP
\fBReturns\fP
.RS 4
the latest memory information for all GPUs\&. 
.RE
.PP

.PP
Definition at line \fB20\fP of file \fBlog_memusage_nvml\&.c\fP\&.
.SS "int log_memusage_get_max_gpu ()"

.PP
\fBReturns\fP
.RS 4
the maximum memory used on any of the \fCdevice_count\fP GPUs (MB)\&. 
.RE
.PP

.PP
Definition at line \fB28\fP of file \fBlog_memusage_nvml\&.c\fP\&.
.SS "void log_memusage_initialize ()"
Initializes the memory logging data structures and execution thread\&. 
.SS "int log_memusage_ngpus ()"

.PP
\fBReturns\fP
.RS 4
the number of GPUs active for this \fC\fBmain()\fP\fP application\&. 
.RE
.PP

.PP
Definition at line \fB18\fP of file \fBlog_memusage_nvml\&.c\fP\&.
.SS "int log_memusage_pause ()"
Pauses memory monitoring by termininaing the execution thread\&. 
.PP
Definition at line \fB352\fP of file \fBlog_memusage\&.c\fP\&.
.SS "int log_memusage_report (const char * prefix)"
Prints the current memory usage status to \fCstderr\fP\&. 
.PP
\fBReturns\fP
.RS 4
The amount of CPU memory currently in use (MB)\&. 
.RE
.PP

.PP
Definition at line \fB229\fP of file \fBlog_memusage\&.c\fP\&.
.SS "int log_memusage_resume ()"
Resumes memory monitoring by restarting the execution thread\&. 
.PP
Definition at line \fB371\fP of file \fBlog_memusage\&.c\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Log Memusage from the source code\&.
